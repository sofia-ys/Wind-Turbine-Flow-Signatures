% CLEAR UP PREVIOUS WORKSPACE
clear; close all; clc;

% DEFINE PARAMETERS
folder = "./NREL_FXXXXX_5D_000_00025_copy/exportedCSV/exportedCSV_y00D";
files = dir(fullfile(folder, '*.csv')); % Get all CSV files
numFiles = length(files);

% Ensure we have valid files
if numFiles < 1
    error("No CSV files found in the folder!");
end

% Preallocate the structure for velocity data
V_struct = struct('velocity', cell(numFiles, 1));

% Start timing
totalStartTime = tic; 

fprintf("Processing %d files...\n", numFiles);

% LOOP THROUGH FILES
for i = 1:numFiles
    fileStartTime = tic; % Track time for each file
    
    filePath = fullfile(folder, files(i).name);
    
    % Use readmatrix for faster reading
    data = readmatrix(filePath);

    % Debug: Display file info
    disp(['Processing file: ', files(i).name, ' | Size: ', mat2str(size(data))]);

    % Ensure data is valid
    if isempty(data) || size(data, 2) < 5
        warning("Skipping file %s (empty or insufficient columns)", files(i).name);
        continue;
    end

    numRows = size(data, 1);
    if isnan(numRows) || numRows < 1
        warning("Skipping file %s (invalid row count)", files(i).name);
        continue;
    end

    % Extract velocity components
    u_velocity = data(:, 3);
    v_velocity = data(:, 4);
    w_velocity = data(:, 5);

    % Compute absolute velocity magnitude
    V_struct(i).velocity = sqrt(u_velocity.^2 + v_velocity.^2 + w_velocity.^2);

    % Display progress update every 100 files
    if mod(i, 100) == 0
        elapsedFileTime = toc(fileStartTime);
        fprintf("Processed %d/%d files (Last 100 took %.2f sec)...\n", i, numFiles, elapsedFileTime);
    end
end

% Display total elapsed time
totalElapsedTime = toc(totalStartTime);
fprintf("Processing complete! Total time: %.2f seconds.\n", totalElapsedTime);
