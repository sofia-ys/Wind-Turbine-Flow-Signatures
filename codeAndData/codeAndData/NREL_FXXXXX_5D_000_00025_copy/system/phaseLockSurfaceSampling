
    phaselock0_180
    {
        // Where to load it from
        functionObjectLibs ( "libsampling.so" );

        type            surfaces;
        timeStart       $phaseLock000StartMaster;
        timeEnd         $phaseLock000EndMaster;

        // Name of the directory for probe data
        writeControl    timeStep;
        writeInterval   $phaseLock000IntervalMaster;

        surfaceFormat   vtk;

        formatOptions
        {
            vtk
            {
                legacy    true;
            }
        }
        // Fields to be probed
        fields (
            p
            U
            Ux
            Uy
            Uz
            V
            nut
            vorticityField
           );

        surfaces
        (
            yPlane000Phase
            {
                type        cuttingPlane;
                planeType   pointAndNormal;
                pointAndNormalDict
                {
                    point           (0.0 0.0 0.0);
                    normalVector    (0.0 1.0 0.0);
                }
                interpolate  true;
            }


            xPlane_3D000Phase
            {
                type        cuttingPlane;
                planeType   pointAndNormal;
                pointAndNormalDict
                {
                    point           (378.0 0.0 0.0);
                    normalVector    (1.0 0.0 0.0);
                }
                interpolate  true;
            }


            xPlane_5D000Phase
            {
                type        cuttingPlane;
                planeType   pointAndNormal;
                pointAndNormalDict
                {
                    point           (630.0 0.0 0.0);
                    normalVector    (1.0 0.0 0.0);
                }
                interpolate  true;
            }

            xPlane_6D000Phase
            {
                type        cuttingPlane;
                planeType   pointAndNormal;
                pointAndNormalDict
                {
                    point           (756.0 0.0 0.0);
                    normalVector    (1.0 0.0 0.0);
                }
                interpolate  true;
            }

            xPlane_8D000Phase
            {
                type        cuttingPlane;
                planeType   pointAndNormal;
                pointAndNormalDict
                {
                    point           (1008.0 0.0 0.0);
                    normalVector    (1.0 0.0 0.0);
                }
                interpolate  true;
            }

        );
    }

